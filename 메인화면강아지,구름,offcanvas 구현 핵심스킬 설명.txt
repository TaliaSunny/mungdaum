   1.강아지캐릭터 구현  스킬표
   
   
   강아지캐릭터구현 css 
   
   위의 코드는 CSS를 사용하여 간단한 개(dog) 모양의 애니메이션을 만드는 것입니다. 각 클래스(class)는 개의 다른 부분(머리, 몸통, 귀, 등)을 나타내며, 이러한 부분들을 조합하여 개의 형태를 만듭니다.
   
   주요 기술은 다음과 같습니다:
   
   1.CSS의 클래스(class) 사용: 각 부분을 나타내는 클래스들이 정의되어 있습니다. .dog, .dog-body, .dog-head, .dog-torso 등으로 각 요소의 크기, 색상, 모양 등이 정의되어 있습니다.
   
   2.CSS 애니메이션과 키프레임(Keyframes): @keyframes 규칙을 사용하여 각 요소에 애니메이션 효과를 적용하고 있습니다. 예를 들어, .dog-body 요소에는 dog-body 애니메이션이 적용되어 몸통이 좌우로 약간 움직이는 효과를 주고 있습니다.
   
   3.가상 요소(::before, ::after) 사용: 가상 요소를 활용하여 몇 가지 부분에 그림자나 특정 모양을 주는 등의 효과를 추가하고 있습니다. .dog-body:before 등으로 가상 요소를 활용하여 특정 부분에 그림자나 색상 효과를 줄 수 있습니다.
   
   4.포지셔닝과 Transform: 요소들의 위치와 모양을 조절하기 위해 position, transform 등을 사용하고 있습니다. 각 요소들을 정확한 위치에 배치하고, 회전 및 변형 효과를 주기 위해 활용되었습니다.
   
   5.z-index: 일부 요소에 z-index가 지정되어 있어, 요소들의 쌓임 순서가 조절되고 있습니다. 이를 통해 일부 요소가 다른 요소 위에 올라가게 설정할 수 있습니다.
   
   이 코드는 각 부분을 조합하여 개의 형태를 만들어내는데, 클래스들의 스타일과 애니메이션 효과가 핵심 기술입니다. 이를 통해 간단한 CSS와 HTML만으로도 흥미로운 모양과 애니메이션을 만들어 낼 수 있습니다.
   
   
   2.구름 구현 스킬표 
   
   
   
   구름구현 css 스킬
   
   
   
    CSS를 사용하여 구름 모양의 요소를 만듬 주요 기술은 다음과 같습니다:
   
   1.변수 사용 (--clr): 코드 상단에 --clr이라는 변수가 정의되어 있고, 이 변수를 통해 다양한 곳에서 색상을 사용하고 있어, 이를 한 곳에서 통합적으로 변경 가능합니다.
   
   2.애니메이션 효과 (@keyframes animateColor 및 @keyframes animate): animateColor는 구름 색상을 360도 회전하는 애니메이션을 정의합니다. animate는 비(drop) 효과를 주는데 사용되며, 요소의 위치 및 크기를 변경하여 비 내리는 효과를 만듭니다.
   
   3.그림자 및 효과: filter, drop-shadow 등의 속성을 사용하여 구름에 그림자 효과와 형광 효과를 부여하고 있습니다.
   
   4.요소의 위치 조절(position, top, left, transform): position 속성과 top, left 값을 조절하여 구름 내부의 텍스트나 그래픽 요소들의 위치를 조절하고 있습니다. transform을 사용하여 요소를 이동하거나 회전시키는 등의 변형을 주고 있습니다.
   
   5.요소의 모양 조절(border-radius, width, height): border-radius를 활용하여 요소들의 모서리를 둥글게 처리하고, width와 height를 통해 크기를 조절하고 있습니다.
   
   
   
   구름구현 js스킬 
   
   
   이 코드는 JavaScript를 사용하여 화면에 비가 내리는 효과를 만드는 함수를 구현였습니다. 여기서 사용된 주요 기술을 살펴보겠습니다:
   
   1.randomText 함수: 이 함수는 랜덤으로 'MUNGDAUM' 중 하나의 글자를 선택합니다. Math.random() 함수를 사용하여 문자열에서 임의의 글자를 선택하고 반환합니다.
   
   2.rain 함수: rain 함수는 비(drops) 효과를 만들어내는 역할을 합니다. 이 함수는 먼저 .cloud라는 클래스를 가진 요소를 찾고, 그 안에 새로운 div 엘리먼트를 생성합니다. 이 엘리먼트에 drop 클래스를 추가하고 .cloud 요소 안에 삽입합니다.
   
   3.left, size, duration 변수: 비(drops)의 좌우 위치, 크기, 애니메이션 지속 시간을 랜덤으로 설정하고 있습니다.
   
   4.비(drops) 스타일 설정: innerText를 통해 랜덤한 문자를 생성하여 비(drops) 요소에 삽입합니다. 그리고 left, fontSize, animationDuration 등의 스타일을 랜덤 값으로 설정하여 떨어지는 비의 속성을 지정합니다.
   
   5.비(drops) 삭제: setTimeout 함수를 사용하여 일정 시간이 지난 후에 비(drops)를 제거합니다. 이것은 비가 화면을 벗어나면 해당 요소를 삭제하여 메모리 누수를 방지합니다.
   
   6.setInterval 함수: setInterval을 사용하여 일정한 간격(20ms)으로 rain 함수를 호출하여 비가 지속적으로 내리도록 구현되어 있습니다.
   
   이 코드는 JavaScript를 사용하여 HTML 요소를 조작하여 비가 내리는 효과를 만드는데 활용되었어요.
   
   
   
   
   
   3.offcanvas 구현 기술 표
   
   
   offcanvas css

   여러 개의 버튼(toggle-btn, toggle-btn2, toggle-btn3, ... , toggle-btn6)을 만들어 offcanvas 아이콘 메뉴들을 제어하는 스타일링이 이루어지고 있어요. 여기서 사용된 주요 기술들을 살펴보겠습니다:

   1.위치 조절 (order, right, top, transform): 버튼들의 위치를 조정하기 위해 order, right, top, transform 속성을 사용합니다. 이를 조합하여 화면의 오른쪽 상단에 고정된 위치에 버튼을 배치하고 있어요.

   2.디자인 요소 (background-color, color, border, box-shadow, border-radius): 버튼의 디자인 요소를 지정하고 있습니다. 배경색, 글자색, 테두리, 그림자 효과, 그리고 버튼의 모서리를 둥글게 만드는 등의 스타일링이 이루어져요.

   3.고정 위치 (position: fixed): 버튼을 화면에 고정시켜 사용자가 스크롤해도 해당 위치에 유지되도록 하고 있습니다.

   4.레이어 순서 조절 (z-index): 여러 버튼이 겹치는 경우를 대비해 z-index 속성을 사용하여 어떤 버튼이 다른 버튼 위에 표시될지 결정하고 있어요.

   5.상속과 재사용 : 버튼들 간의 유사한 스타일을 재활용하면서도 각각의 버튼은 개별적으로 필요한 위치로 조정되고 있습니다.
   
   
   offcanvas js 
   
    Offcanvas 메뉴를 토글하고 그와 연관된 버튼들의 동작을 제어하는 JavaScript 코드입니다. 여기서 사용된 주요 기술과 기능을 설명해보겠습니다.
   
   1.DOMContentLoaded 이벤트: 페이지가 로드될 때 DOMContentLoaded 이벤트를 사용하여 페이지의 DOM이 완전히 로드된 후에 코드가 실행되도록 합니다.
   
   2.Menu Item 클릭 이벤트: Offcanvas 메뉴의 각 메뉴 아이템에 클릭 이벤트 리스너를 추가합니다. 이를 통해 메뉴 아이템을 클릭할 때 이벤트 전파를 방지합니다. (event.stopPropagation())
   
   toggleOffcanvas 함수: Offcanvas 메뉴를 열거나 닫는 함수입니다.
   
   offcanvasMenu, closeBtn, buttons 등의 요소들을 변수로 선택합니다.
   
   만약 offcanvasMenu의 너비가 280px이면(열려있으면) 메뉴를 닫고, 버튼 위치를 초기화합니다.
   
   그렇지 않으면(닫혀있으면) 메뉴를 열고, 버튼들의 위치를 조정합니다. 버튼들을 오른쪽으로 280px 이동시켜서 메뉴가 열릴 때 버튼들이 따라 이동하도록 합니다.
   
   이 코드는 Offcanvas 메뉴의 열고 닫음에 따라 메뉴 너비와 버튼들의 위치를 조절하여 사용자 경험을 향상시키는 데 사용됩니다.
   